name: Application CI/CD

on:
  push:
    branches: [ "master" ]
    paths:
      - 'app/**'

jobs:
  build_and_deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hangman
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"  
    
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      
    - name: Terraform Plan
      working-directory: ./terraform
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        APP_SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
      run: terraform plan -var="db-name=${DB_NAME}" -var="db-password=${DB_PASSWORD}" -var="db-username=${DB_USERNAME}" -var="app-secret-key=${APP_SECRET_KEY}" -var="docker_image=${{ steps.build-image.outputs.image }}"
    
    - name: Terraform Apply
      working-directory: ./terraform
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        APP_SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
      run: terraform apply -auto-approve -var="db-name=${DB_NAME}" -var="db-password=${DB_PASSWORD}" -var="db-username=${DB_USERNAME}" -var="app-secret-key=${APP_SECRET_KEY}" -var="docker_image=${{ steps.build-image.outputs.image }}"
    
      
